// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	vaults "github.com/adarsh-a-tw/passwordly/vaults"
	mock "github.com/stretchr/testify/mock"
)

// VaultRepository is an autogenerated mock type for the VaultRepository type
type VaultRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: v
func (_m *VaultRepository) Create(v *vaults.Vault) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(*vaults.Vault) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: v
func (_m *VaultRepository) Delete(v *vaults.Vault) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(*vaults.Vault) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FetchById provides a mock function with given fields: id, v
func (_m *VaultRepository) FetchById(id string, v *vaults.Vault) error {
	ret := _m.Called(id, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *vaults.Vault) error); ok {
		r0 = rf(id, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FetchByUserId provides a mock function with given fields: userId, _a1
func (_m *VaultRepository) FetchByUserId(userId string, _a1 *[]vaults.Vault) error {
	ret := _m.Called(userId, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *[]vaults.Vault) error); ok {
		r0 = rf(userId, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: v
func (_m *VaultRepository) Update(v *vaults.Vault) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(*vaults.Vault) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewVaultRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewVaultRepository creates a new instance of VaultRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVaultRepository(t mockConstructorTestingTNewVaultRepository) *VaultRepository {
	mock := &VaultRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
