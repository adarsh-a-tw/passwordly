// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	vaults "github.com/adarsh-a-tw/passwordly/vaults"
	mock "github.com/stretchr/testify/mock"
)

// SecretRepository is an autogenerated mock type for the SecretRepository type
type SecretRepository struct {
	mock.Mock
}

// CreateCredential provides a mock function with given fields: credential
func (_m *SecretRepository) CreateCredential(credential *vaults.Credential) error {
	ret := _m.Called(credential)

	var r0 error
	if rf, ok := ret.Get(0).(func(*vaults.Credential) error); ok {
		r0 = rf(credential)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindCredentials provides a mock function with given fields: credentials, vaultId
func (_m *SecretRepository) FindCredentials(credentials *[]vaults.Credential, vaultId string) error {
	ret := _m.Called(credentials, vaultId)

	var r0 error
	if rf, ok := ret.Get(0).(func(*[]vaults.Credential, string) error); ok {
		r0 = rf(credentials, vaultId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSecretRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewSecretRepository creates a new instance of SecretRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSecretRepository(t mockConstructorTestingTNewSecretRepository) *SecretRepository {
	mock := &SecretRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
