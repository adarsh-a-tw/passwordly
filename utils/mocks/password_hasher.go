// Code generated by mockery v2.20.0. DO NOT EDIT.

package utils_mocks

import mock "github.com/stretchr/testify/mock"

// PasswordHasher is an autogenerated mock type for the PasswordHasher type
type PasswordHasher struct {
	mock.Mock
}

// ComparePassword provides a mock function with given fields: rawPwd, hashedPwd
func (_m *PasswordHasher) ComparePassword(rawPwd string, hashedPwd string) bool {
	ret := _m.Called(rawPwd, hashedPwd)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(rawPwd, hashedPwd)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// HashPassword provides a mock function with given fields: pwd
func (_m *PasswordHasher) HashPassword(pwd string) string {
	ret := _m.Called(pwd)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(pwd)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewPasswordHasher interface {
	mock.TestingT
	Cleanup(func())
}

// NewPasswordHasher creates a new instance of PasswordHasher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPasswordHasher(t mockConstructorTestingTNewPasswordHasher) *PasswordHasher {
	mock := &PasswordHasher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
